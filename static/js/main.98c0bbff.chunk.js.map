{"version":3,"sources":["assets/images/location.svg","assets/images sync /^/.*/.svg$","assets/images/Clear.svg","assets/images/Clouds.svg","assets/images/PartlyCloudy.svg","assets/images/Rain.svg","assets/images/Strom.svg","store/ducks/weather/contracts/actionTypes.ts","store/ducks/weather/actionCreators.ts","assets/data/citiesArray.ts","components/Header.tsx","store/ducks/weather/selectors.ts","App.tsx","api/api.ts","store/ducks/weather/sagas.ts","store/saga.ts","store/ducks/weather/reducer.ts","store/rootReducers.ts","store/store.ts","index.tsx"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","ActionsType","setWeatherData","payload","type","SET_WEATHER_DATA","citiesArray","Header","searchValue","getWeather","typeUnit","setTypeUnit","setSearchValue","useState","visibleSelector","setVisibleSelector","inputVisible","setInputVisible","toggleInputVisible","c","className","onClick","item","index","src","require","default","alt","selectWeatherData","state","weatherState","selectWeatherState","weatherData","App","dispatch","useDispatch","useSelector","location","FETCH_WEATHER_DATA","useEffect","weather","main","Math","round","temp","description","wind","speed","pressure","humidity","Api","postData","axios","get","data","fetchWeatherDataRequest","WeatherSaga","call","put","takeLatest","rootSaga","all","weatherReducer","produce","draft","action","rootReducer","combineReducers","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","sagaMiddleware","createSagaMiddleware","store","createStore","applyMiddleware","run","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.98c0bbff.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/location.2dfb72ad.svg\";","var map = {\n\t\"./Clear.svg\": 43,\n\t\"./Clouds.svg\": 44,\n\t\"./PartlyCloudy.svg\": 45,\n\t\"./Rain.svg\": 46,\n\t\"./Strom.svg\": 47,\n\t\"./location.svg\": 19\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 42;","export default __webpack_public_path__ + \"static/media/Clear.5f4a8e48.svg\";","export default __webpack_public_path__ + \"static/media/Clouds.537bf324.svg\";","export default __webpack_public_path__ + \"static/media/PartlyCloudy.bd05e8ee.svg\";","export default __webpack_public_path__ + \"static/media/Rain.0b103200.svg\";","export default __webpack_public_path__ + \"static/media/Strom.8596a268.svg\";","import {Action} from \"redux\";\r\nimport {IState} from \"./state\";\r\n\r\nexport enum ActionsType {\r\n    FETCH_WEATHER_DATA = \"weather/FETCH_WEATHER_DATA\",\r\n    SET_WEATHER_DATA = \"weather/SET_WEATHER_DATA\",\r\n}\r\n\r\nexport interface IFetchWeatherData extends Action<ActionsType> {\r\n    type: ActionsType.FETCH_WEATHER_DATA\r\n    payload: { location: string, typeUnit: string }\r\n}\r\n\r\nexport interface ISetWeatherData extends Action<ActionsType> {\r\n    type: ActionsType.SET_WEATHER_DATA\r\n    payload: IState['weatherData']\r\n}\r\n\r\n\r\nexport type IUserActions =\r\n    IFetchWeatherData\r\n    | ISetWeatherData\r\n\r\n\r\n","import {\r\n    ActionsType,\r\n    IFetchWeatherData,\r\n    ISetWeatherData\r\n} from \"./contracts/actionTypes\";\r\nimport {IState} from \"./contracts/state\";\r\n\r\n\r\nexport const fetchWeatherData = (payload: {location: string, typeUnit: string}): IFetchWeatherData => ({\r\n    type: ActionsType.FETCH_WEATHER_DATA,\r\n    payload\r\n});\r\n\r\nexport const setWeatherData = (payload: IState['weatherData']): ISetWeatherData => ({\r\n    type: ActionsType.SET_WEATHER_DATA,\r\n    payload\r\n});\r\n","export const citiesArray = [\r\n    'Москва', 'Омск', 'Уфа', 'Петропавловск Камчатский', 'Санкт-Петербург',\r\n    'Новосибирск', 'Екатеринбург', 'Казань', 'Нижний Новгород', 'Челябинск',\r\n    'Самара', 'Ростов-на-Дону', 'Красноярск', 'Пермь', 'Воронеж', 'Волгоград',\r\n    'Краснодар', 'Саратов', 'Тюмень', 'Тольятти', 'Ижевск', 'Барнаул', 'Иркутск',\r\n    'Ульяновск', 'Хабаровск', 'Ярославль', 'Владивосток', 'Махачкала', 'Томск',\r\n    'Оренбург', 'Кемерово', 'Новокузнецк', 'Рязань', 'Астрахань', 'Набережные Челны',\r\n    'Пенза', 'Липецк', 'Киров',\r\n]\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React, {useState} from 'react';\r\n\r\nimport {citiesArray} from \"../assets/data/citiesArray\";\r\n\r\n\r\ninterface HeaderProps {\r\n    searchValue: string\r\n    getWeather: (type?: string) => void\r\n    typeUnit: string\r\n    setTypeUnit: (typeUnit: 'imperial' | 'metric') => void\r\n    setSearchValue: (searchValue: string) => void\r\n}\r\n\r\nexport const Header: React.FC<HeaderProps> = ({searchValue, getWeather, typeUnit, setTypeUnit, setSearchValue}) => {\r\n    const [visibleSelector, setVisibleSelector] = useState(false)\r\n    const [inputVisible, setInputVisible] = useState(false)\r\n\r\n    const toggleInputVisible = () => {\r\n        setInputVisible(c => !c)\r\n    }\r\n\r\n    return (\r\n        <header className='header'>\r\n            {inputVisible\r\n                ? (\r\n                    <div className='search'>\r\n                        <div className='search__city' onClick={() => setVisibleSelector(true)}>\r\n                            {searchValue}\r\n                        </div>\r\n                        <button onClick={() => {\r\n                            getWeather()\r\n                            toggleInputVisible()\r\n                        }}>\r\n                            OK\r\n                        </button>\r\n                        <div className={'search__list' + (visibleSelector ? ' visible' : '')}>\r\n                            {citiesArray.map((item, index) =>\r\n                                <div key={item + index}\r\n                                     onClick={() => {\r\n                                         setVisibleSelector(false)\r\n                                         setSearchValue(item)\r\n                                     }}>\r\n                                    {item}\r\n                                </div>)}\r\n                        </div>\r\n                    </div>\r\n                ) : (\r\n                    <div className='city'>\r\n                        <div className='city__title'>\r\n                            {!!searchValue ? searchValue : 'Москва'}\r\n                        </div>\r\n                        <div className='city__subtitle'>\r\n                            <p className='city__subtitle_change'\r\n                               onClick={toggleInputVisible}>\r\n                                Сменить город\r\n                            </p>\r\n                            <div>\r\n                                <img src={require(\"../assets/images/location.svg\").default}\r\n                                     alt='Location Svg'/>\r\n                                <p>Мое местоположение</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>)}\r\n            <div className='switch'>\r\n                <p>º</p>\r\n                <div>\r\n                    <button className={typeUnit === 'metric' ? 'active' : ''}\r\n                            onClick={() => {\r\n                                setTypeUnit('metric')\r\n                                getWeather('metric')\r\n                            }}>\r\n                        C\r\n                    </button>\r\n                    <button className={typeUnit === 'imperial' ? 'active' : ''}\r\n                            onClick={() => {\r\n                                setTypeUnit('imperial')\r\n                                getWeather('imperial')\r\n                            }}>\r\n                        F\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </header>\r\n    );\r\n};","import {RootState} from \"../../store\";\r\nimport {IState} from \"./contracts/state\";\r\n\r\n\r\nexport const selectWeatherState = (state: RootState): IState => state.weatherState\r\n\r\nexport const selectWeatherData = (state: RootState): IState['weatherData'] =>\r\n    selectWeatherState(state).weatherData\r\n","import React, {useEffect, useState} from 'react';\nimport {useDispatch, useSelector} from \"react-redux\";\n\nimport {fetchWeatherData} from \"./store/ducks/weather/actionCreators\";\nimport {Header} from \"./components/Header\";\nimport {selectWeatherData} from \"./store/ducks/weather/selectors\";\n\n\nexport const App = () => {\n    const dispatch = useDispatch()\n    const weatherData = useSelector(selectWeatherData)\n    const [typeUnit, setTypeUnit] = useState<'imperial' | 'metric'>('metric')\n    const [searchValue, setSearchValue] = useState('Омск')\n\n    const getWeather =(type?: string) => {\n        dispatch(fetchWeatherData({location: searchValue, typeUnit: type ? type : typeUnit}))\n    }\n\n    useEffect(() => {\n        getWeather()\n    }, [])\n\n    if (weatherData) {\n        return (\n            <div className='App'>\n                <div className=\"wrapper\">\n                    <Header getWeather={getWeather}\n                            searchValue={searchValue} setSearchValue={setSearchValue}\n                            setTypeUnit={setTypeUnit} typeUnit={typeUnit}/>\n                    <div className='content'>\n                        <div className='weather'>\n                            <div>\n                                <img\n                                    src={require(`./assets/images/${weatherData.weather[0].main}.svg`).default}\n                                    alt='Svg'/>\n                                <div className='weather__value'>\n                                    {Math.round(weatherData.main.temp)}º\n                                </div>\n                            </div>\n                            <span>{weatherData.weather[0].description}</span>\n                        </div>\n                    </div>\n                    <div className='info'>\n                        <div className='info__item'>\n                            <p>Ветер</p>\n                            <div>{weatherData.wind.speed} м/c, западный</div>\n                        </div>\n                        <div className='info__item'>\n                            <p>Давление</p>\n                            <div>{weatherData.main.pressure} мм рт. ст.</div>\n                        </div>\n                        <div className='info__item'>\n                            <p>Влажность</p>\n                            <div>{weatherData.main.humidity}%</div>\n                        </div>\n                        <div className='info__item'>\n                            <p>Вероятность дождя</p>\n                            <div>10%</div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }else  return null\n}\n","import axios from \"axios\";\r\n\r\n\r\nexport const Api = {\r\n    async fetchWeatherForecast(postData: { location: string, typeUnit: string }) {\r\n        const {data} = await axios.get(`https://api.openweathermap.org/data/2.5/weather?q=${postData.location}&lang=ru&units=${postData.typeUnit}&appid=d5b00e67a499c0764a8532916a8213d0`)\r\n        return data\r\n    }\r\n}","import {call, put, takeLatest} from \"redux-saga/effects\";\r\n\r\nimport {ActionsType, IFetchWeatherData} from \"./contracts/actionTypes\";\r\nimport {setWeatherData} from \"./actionCreators\";\r\nimport {IState} from \"./contracts/state\";\r\nimport {Api} from \"../../../api/api\";\r\n\r\n\r\nexport function* fetchWeatherDataRequest({payload}: IFetchWeatherData) {\r\n    try {\r\n        const data: IState['weatherData'] = yield call(Api.fetchWeatherForecast, payload)\r\n        yield put(setWeatherData(data))\r\n    } catch (error) {\r\n        throw new Error()\r\n    }\r\n}\r\n\r\n\r\nexport function* WeatherSaga() {\r\n    yield takeLatest(ActionsType.FETCH_WEATHER_DATA, fetchWeatherDataRequest)\r\n}","import { all } from \"redux-saga/effects\";\r\n\r\nimport {WeatherSaga} from \"./ducks/weather/sagas\";\r\n\r\n\r\nexport default function* rootSaga() {\r\n    yield all([\r\n        WeatherSaga(),\r\n    ])\r\n}","import produce, {Draft} from \"immer\";\r\n\r\nimport {IState} from \"./contracts/state\";\r\nimport {ActionsType, IUserActions} from \"./contracts/actionTypes\";\r\n\r\n\r\nconst initialState: IState = {\r\n    weatherData: null as IState['weatherData'],\r\n\r\n}\r\n\r\nexport const weatherReducer = produce((draft: Draft<IState>, action: IUserActions) => {\r\n    switch (action.type) {\r\n        case ActionsType.SET_WEATHER_DATA:\r\n            draft.weatherData = action.payload\r\n            break;\r\n        default:\r\n            break;\r\n    }\r\n}, initialState)","import {combineReducers} from \"redux\";\r\n\r\nimport {weatherReducer} from \"./ducks/weather/reducer\";\r\n\r\n\r\nexport const rootReducer = combineReducers({\r\n    weatherState: weatherReducer,\r\n});","import {createStore, compose, applyMiddleware} from \"redux\";\r\nimport createSagaMiddleware from 'redux-saga';\r\n\r\nimport rootSaga from \"./saga\";\r\nimport {rootReducer} from \"./rootReducers\";\r\nimport {IState} from \"./ducks/weather/contracts/state\";\r\n\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst sagaMiddleware = createSagaMiddleware()\r\n\r\nexport interface RootState {\r\n    weatherState: IState\r\n}\r\n\r\nexport const store = createStore(rootReducer, composeEnhancers(applyMiddleware(sagaMiddleware)))\r\n\r\nsagaMiddleware.run(rootSaga)","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport {App} from './App';\nimport {Provider} from \"react-redux\";\nimport {store} from \"./store/store\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <App/>\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}